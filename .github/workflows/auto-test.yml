name: Generaci칩n Autom치tica de Tests

on:
  pull_request:
    branches:
      - main

jobs:
  generate-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout del c칩digo de la PR
        uses: actions/checkout@v4

      - name: Obtener archivos modificados
        id: changed_files
        uses: tj-actions/changed-files@v44
        with:
          files_ignore_pattern: |
            **/*.md
            **/*.txt

      - name: Configurar Python
        if: steps.changed_files.outputs.any_changed == 'true'
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Instalar dependencias de Python
        if: steps.changed_files.outputs.any_changed == 'true'
        run: pip install -r backend/requirements.txt

      - name: Generar Tests con Gemini
        if: steps.changed_files.outputs.any_changed == 'true'
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          echo "Archivos modificados para procesar:"
          echo "${{ steps.changed_files.outputs.all_changed_files }}"
          python backend/scripts/generate_tests.py ${{ steps.changed_files.outputs.all_changed_files }}

      - name: Commit de los nuevos tests a la PR
        if: steps.changed_files.outputs.any_changed == 'true'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'test: A침adir tests unitarios autogenerados por Gemini'
          file_pattern: '**/*.test.js backend/tests/**/*.py'
          commit_user_name: 'Gemini Bot'
          commit_user_email: 'gemini-bot@example.com'
          commit_author: 'Gemini Bot <gemini-bot@example.com>'
